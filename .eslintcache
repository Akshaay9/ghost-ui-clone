[{"C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\index.js":"1","C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\App.js":"2","C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\utils.js":"3","C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\Cart.js":"4","C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\ProductList.js":"5","C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\data.js":"6"},{"size":207,"mtime":1612174226670,"results":"7","hashOfConfig":"8"},{"size":932,"mtime":1613718895114,"results":"9","hashOfConfig":"8"},{"size":57,"mtime":1613659772931,"results":"10","hashOfConfig":"8"},{"size":3765,"mtime":1613725655225,"results":"11","hashOfConfig":"8"},{"size":2928,"mtime":1613724181862,"results":"12","hashOfConfig":"8"},{"size":1468,"mtime":1613708710579,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1einsj8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\index.js",[],["30","31"],"C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\App.js",[],"C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\utils.js",[],["32","33"],"C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\Cart.js",["34","35","36","37","38","39","40","41"],"import React, { useState,useEffect } from \"react\";\r\nimport { data } from \"./data\";\r\nfunction Cart({\r\n  setShowCart,\r\n  showCart,\r\n  cartItems,\r\n  setCartItems,\r\n  productData,\r\n  setProductData,\r\n}) {\r\n  const [cartitemQty, setCartItemQty] = useState(1);\r\n  const [totalQty, setTotalQty] = useState(0);\r\n  const [totalprice, setTotalprice] = useState(0);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    setCartItems((ele) => [...ele.filter((obj) => obj.id !== id)]);\r\n    const newProduct = data.find((ele) => ele.id == id);\r\n    console.log(newProduct);\r\n    setProductData((ele) => [\r\n      ...ele.map((obj) =>\r\n        obj.id == id\r\n          ? {\r\n              ...newProduct,\r\n            }\r\n          : obj\r\n      ),\r\n    ]);\r\n  };\r\n\r\n  const changeCartQty = (id) => {\r\n    console.log(cartitemQty);\r\n    const newProduct = data.find((ele) => ele.id == id);\r\n    setCartItems((ele) => [\r\n      ...ele.map((obj) =>\r\n        obj.id == id\r\n          ? {\r\n              ...obj,\r\n              cartQty: cartitemQty,\r\n              qty: newProduct.qty - cartitemQty,\r\n            }\r\n          : obj\r\n      ),\r\n    ]);\r\n    setProductData((ele) => [\r\n        ...ele.map((obj) =>\r\n          obj.id == id\r\n            ? {\r\n                ...obj,\r\n                qty: newProduct.qty - cartitemQty,\r\n              }\r\n            : obj\r\n        ),\r\n    ]);\r\n    setCartItemQty(1)\r\n  };\r\n  const qtySelectHandler = (id) => {\r\n    const newProduct = data.find((ele) => ele.id == id);\r\n    return (\r\n      <input\r\n        type=\"number\"\r\n        id=\"quantity\"\r\n        name=\"quantity\"\r\n        onChange={(e) => setCartItemQty(e.target.value)}\r\n        min=\"1\"\r\n        max={newProduct.qty}\r\n      />\r\n    );\r\n  };\r\n    console.log(cartItems);\r\n    useEffect(() => {\r\n        setTotalprice(cartItems.reduce((acc,obj)=>acc+obj.cartQty*obj.price,0))\r\n        setTotalQty(cartItems.reduce((acc,obj)=>acc+obj.cartQty*1,0))\r\n    },[productData,cartItems])\r\n  return (\r\n    <div className={`cartScreen ${showCart ? `showCart` : `damn`}`}>\r\n      <h1 className=\"cartScreenTitle\">Cart Screen</h1>\r\n      <button className=\"closeCart\" onClick={() => setShowCart(!showCart)}>\r\n        X Close\r\n      </button>\r\n      <div className=\"cartScrrenDetails\">\r\n        <div className=\"amount\">\r\n          <h4>Amount : {totalprice} rs</h4>\r\n        </div>\r\n        <div className=\"totalQty\">\r\n          <h4>qty : {totalQty}</h4>\r\n        </div>\r\n      </div>\r\n      <div className=\"productList\">\r\n        {cartItems.length == 0 ? (\r\n          <h3 style={{ textAlign: \"center\" }}>No items In the Cart</h3>\r\n        ) : (\r\n          cartItems.map((ele) => (\r\n            <div className=\"card\">\r\n              <div className=\"heading\">\r\n                <h3 className=\"productListName\">{ele.name}</h3>\r\n                <div className=\"productImage\">\r\n                  <img src={ele.img} alt=\"\" />\r\n                </div>\r\n                <div className=\"productQty\">\r\n                  <h4>Price : {ele.price * ele.cartQty}</h4>\r\n                  <h4>Total Qty : {ele.cartQty}</h4>\r\n                          {/*  */}\r\n                         { qtySelectHandler(ele.id)}\r\n                  <button onClick={() => changeCartQty(ele.id)}>\r\n                    Modify Quatity\r\n                  </button>\r\n\r\n                  <h5\r\n                    style={ele.qty == 0 ? { color: \"red\" } : { color: \"white\" }}\r\n                  >\r\n                    in Stock : {ele.qty}\r\n                  </h5>\r\n\r\n                  <button onClick={() => removeFromCartHandler(ele.id)}>\r\n                    Remove From Cart\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\ProductList.js",["42","43","44","45","46","47","48","49","50","51","52"],"import React, { useState } from \"react\";\r\nimport { data } from \"./data\";\r\nfunction ProductList({ cartItems, setCartItems,productData,setProductData }) {\r\n \r\n    const [productQty, setProductQty] = useState(1);\r\n    const[modifyCartQty,setModifyCartQty]=useState(1)\r\n\r\n  const addToCart = (id) => {\r\n    const findItemInCart = cartItems.find((ele) => ele.id == id);\r\n    if (!findItemInCart) {\r\n      const newCartItem = productData.find((ele) => ele.id == id);\r\n      newCartItem.cartQty = productQty;\r\n      setCartItems([newCartItem, ...cartItems]);\r\n\r\n      setProductData((ele) => [\r\n        ...ele.map((obj) =>\r\n          obj.id == id\r\n            ? {\r\n                ...obj,\r\n                qty: obj.qty - productQty,\r\n              }\r\n            : obj\r\n        ),\r\n      ]);\r\n      setCartItems((ele) => [\r\n        ...ele.map((obj) =>\r\n          obj.id == id\r\n            ? {\r\n                ...obj,\r\n                qty: obj.qty - productQty,\r\n              }\r\n            : obj\r\n        ),\r\n      ]);\r\n      setProductQty(1);\r\n    } else {\r\n      setCartItems((ele) => [\r\n        ...ele.map((obj) =>\r\n          obj.id == id\r\n            ? {\r\n                ...obj,\r\n                    cartQty: parseInt(obj.cartQty) + parseInt(productQty),\r\n                    qty: obj.qty - productQty,\r\n              }\r\n            : obj\r\n        ),\r\n      ]);\r\n      setProductData((ele) => [ \r\n        ...ele.map((obj) =>\r\n          obj.id == id\r\n            ? {\r\n                ...obj,\r\n                qty: obj.qty - productQty,\r\n              }\r\n            : obj\r\n        ),\r\n      ]);\r\n    }\r\n\r\n    setProductQty(1);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2 className=\"homeScreenTitle\">Product List</h2>\r\n      <div className=\"productList\">\r\n        {productData.map((ele) => (\r\n          <div key={ele.id} className=\"card\">\r\n            <div className=\"heading\">\r\n              <h3 className=\"productListName\">{ele.name}</h3>\r\n              <div className=\"productImage\">\r\n                <img src={ele.img} alt=\"\" />\r\n              </div>\r\n              <div className=\"productQty\">\r\n                <h4>Price : {ele.price}</h4>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"quantity\"\r\n                  name=\"quantity\"\r\n                  placeholder=\"1\"\r\n                  onChange={(e) => setProductQty(e.target.value)}\r\n                  min=\"1\"\r\n                  max={ele.qty}\r\n                />\r\n                <button\r\n                  onClick={() => addToCart(ele.id)}\r\n                  disabled={ele.qty == 0}\r\n                >\r\n                  Add To Cart\r\n                </button>\r\n                <p style={ele.qty == 0 ? { color: \"red\" } : { color: \"green\" }}>\r\n                  in Stock : {ele.qty}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\data.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"53","replacedBy":"57"},{"ruleId":"55","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":17,"column":50,"nodeType":"61","messageId":"62","endLine":17,"endColumn":52},{"ruleId":"59","severity":1,"message":"60","line":21,"column":16,"nodeType":"61","messageId":"62","endLine":21,"endColumn":18},{"ruleId":"59","severity":1,"message":"60","line":32,"column":50,"nodeType":"61","messageId":"62","endLine":32,"endColumn":52},{"ruleId":"59","severity":1,"message":"60","line":35,"column":16,"nodeType":"61","messageId":"62","endLine":35,"endColumn":18},{"ruleId":"59","severity":1,"message":"60","line":46,"column":18,"nodeType":"61","messageId":"62","endLine":46,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":57,"column":50,"nodeType":"61","messageId":"62","endLine":57,"endColumn":52},{"ruleId":"59","severity":1,"message":"60","line":89,"column":27,"nodeType":"61","messageId":"62","endLine":89,"endColumn":29},{"ruleId":"59","severity":1,"message":"60","line":109,"column":36,"nodeType":"61","messageId":"62","endLine":109,"endColumn":38},{"ruleId":"63","severity":1,"message":"64","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":14},{"ruleId":"63","severity":1,"message":"67","line":6,"column":11,"nodeType":"65","messageId":"66","endLine":6,"endColumn":24},{"ruleId":"63","severity":1,"message":"68","line":6,"column":25,"nodeType":"65","messageId":"66","endLine":6,"endColumn":41},{"ruleId":"59","severity":1,"message":"60","line":9,"column":59,"nodeType":"61","messageId":"62","endLine":9,"endColumn":61},{"ruleId":"59","severity":1,"message":"60","line":11,"column":60,"nodeType":"61","messageId":"62","endLine":11,"endColumn":62},{"ruleId":"59","severity":1,"message":"60","line":17,"column":18,"nodeType":"61","messageId":"62","endLine":17,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":27,"column":18,"nodeType":"61","messageId":"62","endLine":27,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":39,"column":18,"nodeType":"61","messageId":"62","endLine":39,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":50,"column":18,"nodeType":"61","messageId":"62","endLine":50,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":86,"column":37,"nodeType":"61","messageId":"62","endLine":86,"endColumn":39},{"ruleId":"59","severity":1,"message":"60","line":90,"column":35,"nodeType":"61","messageId":"62","endLine":90,"endColumn":37},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],["69"],["70"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","'modifyCartQty' is assigned a value but never used.","'setModifyCartQty' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]